// Copyright (c) Josef Pihrt. All rights reserved. Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.

// <auto-generated>

using System;

namespace Roslynator.Formatting.CSharp
{
    public static partial class DiagnosticIdentifiers
    {
        public const string AddEmptyLineAfterEmbeddedStatement = "RCS0001";
        public const string AddEmptyLineAfterRegionDirective = "RCS0002";
        public const string AddEmptyLineAfterUsingDirectiveList = "RCS0003";
        public const string AddEmptyLineBeforeClosingBraceOfDoStatement = "RCS0004";
        public const string AddEmptyLineBeforeEndRegionDirective = "RCS0005";
        public const string AddEmptyLineBeforeUsingDirectiveList = "RCS0006";
        public const string AddEmptyLineBetweenAccessors = "RCS0007";
        public const string AddEmptyLineBetweenBlockAndStatement = "RCS0008";
        public const string AddEmptyLineBetweenDeclarationAndDocumentationComment = "RCS0009";
        public const string AddEmptyLineBetweenDeclarations = "RCS0010";
        public const string AddEmptyLineBetweenSingleLineAccessorsOrViceVersa = "RCS0011";
        public const string AddEmptyLineBetweenSingleLineDeclarations = "RCS0012";
        public const string AddEmptyLineBetweenSingleLineDeclarationsOfDifferentKind = "RCS0013";
        public const string AddEmptyLineBetweenSwitchSections = "RCS0014";
        public const string AddEmptyLineBetweenUsingDirectivesWithDifferentRootNamespaceOrViceVersa = "RCS0015";
        public const string AddNewLineAfterAttributeList = "RCS0016";
        public const string AddNewLineAfterOpeningBraceOfAccessor = "RCS0020";
        public const string AddNewLineAfterOpeningBraceOfBlock = "RCS0021";
        public const string AddNewLineAfterOpeningBraceOfEmptyBlock = "RCS0022";
        public const string AddNewLineAfterOpeningBraceOfTypeDeclaration = "RCS0023";
        public const string AddNewLineAfterSwitchLabel = "RCS0024";
        public const string AddNewLineBeforeAccessorOfFullProperty = "RCS0025";
        public const string AddNewLineBeforeBinaryOperatorInsteadOfAfterItOrViceVersa = "RCS0027";
        public const string AddNewLineBeforeConditionalOperatorInsteadOfAfterItOrViceVersa = "RCS0028";
        public const string AddNewLineBeforeConstructorInitializer = "RCS0029";
        public const string AddNewLineBeforeEmbeddedStatement = "RCS0030";
        public const string AddNewLineBeforeEnumMember = "RCS0031";
        public const string AddNewLineBeforeExpressionBodyArrowInsteadOfAfterItOrViceVersa = "RCS0032";
        public const string AddNewLineBeforeStatement = "RCS0033";
        public const string AddNewLineBeforeTypeParameterConstraint = "RCS0034";
        public const string RemoveEmptyLineBetweenSingleLineDeclarationsOfSameKind = "RCS0036";
        public const string RemoveEmptyLineBetweenUsingDirectivesWithSameRootNamespace = "RCS0038";
        public const string RemoveNewLineBeforeBaseList = "RCS0039";
        public const string RemoveNewLineBetweenIfKeywordAndElseKeyword = "RCS0041";
        public const string RemoveNewLinesFromAccessorListOfAutoProperty = "RCS0042";
        public const string RemoveNewLinesFromAccessorWithSingleLineExpression = "RCS0043";
        public const string UseCarriageReturnAndLinefeedAsNewLine = "RCS0044";
        public const string UseLinefeedAsNewLine = "RCS0045";
        public const string UseSpacesInsteadOfTab = "RCS0046";
        public const string WrapAndIndentEachNodeInList = "RCS0047";
        public const string RemoveNewlinesFromInitializerWithSingleLineExpression = "RCS0048";
        public const string AddEmptyLineAfterTopComment = "RCS0049";
        public const string AddEmptyLineBeforeTopDeclaration = "RCS0050";
        public const string AddNewLineBetweenClosingBraceAndWhileKeywordOrViceVersa = "RCS0051";
        public const string AddNewLineBeforeEqualsSignInsteadOfAfterItOrViceVersa = "RCS0052";
        public const string FixFormattingOfList = "RCS0053";
        public const string FixFormattingOfCallChain = "RCS0054";
        public const string FixFormattingOfBinaryExpressionChain = "RCS0055";
    }
}