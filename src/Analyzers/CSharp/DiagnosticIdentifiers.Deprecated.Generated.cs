// Copyright (c) Josef Pihrt. All rights reserved. Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.

// <auto-generated>

using System;

namespace Roslynator.CSharp
{
    public static partial class DiagnosticIdentifiers
    {
        [Obsolete("", error: true)]
        public const string SimplifyLambdaExpressionParameterList = "RCS1022";
        [Obsolete("", error: true)]
        public const string FormatEmptyBlock = "RCS1023";
        [Obsolete("", error: true)]
        public const string FormatAccessorList = "RCS1024";
        [Obsolete("", error: true)]
        public const string AddNewLineBeforeEnumMember = "RCS1025";
        [Obsolete("", error: true)]
        public const string AddNewLineBeforeStatement = "RCS1026";
        [Obsolete("", error: true)]
        public const string AddNewLineBeforeEmbeddedStatement = "RCS1027";
        [Obsolete("", error: true)]
        public const string AddNewLineAfterSwitchLabel = "RCS1028";
        [Obsolete("", error: true)]
        public const string FormatBinaryOperatorOnNextLine = "RCS1029";
        [Obsolete("", error: true)]
        public const string AddEmptyLineAfterEmbeddedStatement = "RCS1030";
        [Obsolete("", error: true)]
        public const string ReplaceForEachWithFor = "RCS1053";
        [Obsolete("", error: true)]
        public const string MergeLocalDeclarationWithReturnStatement = "RCS1054";
        [Obsolete("", error: true)]
        public const string AddEmptyLineBetweenDeclarations = "RCS1057";
        [Obsolete("", error: true)]
        public const string AvoidInterpolatedStringWithNoInterpolation = "RCS1062";
        [Obsolete("", error: true)]
        public const string RemoveArgumentListFromObjectCreation2 = "RCS1067";
        [Obsolete("", error: true)]
        public const string FormatDeclarationBraces = "RCS1076";
        [Obsolete("", error: true)]
        public const string UseCountOrLengthPropertyInsteadOfCountMethod = "RCS1082";
        [Obsolete("", error: true)]
        public const string CallAnyInsteadOfCount = "RCS1083";
        [Obsolete("", error: true)]
        public const string UseLinefeedAsNewLine = "RCS1086";
        [Obsolete("", error: true)]
        public const string UseCarriageReturnAndLinefeedAsNewLine = "RCS1087";
        [Obsolete("", error: true)]
        public const string UseSpacesInsteadOfTab = "RCS1088";
        [Obsolete("", error: true)]
        public const string AddEmptyLineBeforeWhileInDoStatement = "RCS1092";
        [Obsolete("", error: true)]
        public const string UseCSharp6DictionaryInitializer = "RCS1095";
        [Obsolete("", error: true)]
        public const string CallCastInsteadOfSelect = "RCS1109";
        [Obsolete("", error: true)]
        public const string ReplaceReturnStatementWithExpressionStatement = "RCS1115";
        [Obsolete("", error: true)]
        public const string AddBreakStatementToSwitchSection = "RCS1116";
        [Obsolete("", error: true)]
        public const string AddReturnStatementThatReturnsDefaultValue = "RCS1117";
        [Obsolete("", error: true)]
        public const string CallFindInsteadOfFirstOrDefault = "RCS1119";
        [Obsolete("", error: true)]
        public const string UseElementAccessInsteadOfElementAt = "RCS1120";
        [Obsolete("", error: true)]
        public const string UseElementAccessInsteadOfFirst = "RCS1121";
        [Obsolete("", error: true)]
        public const string AddMissingSemicolon = "RCS1122";
        [Obsolete("", error: true)]
        public const string MarkMemberAsStatic = "RCS1125";
        [Obsolete("", error: true)]
        public const string MergeLocalDeclarationWithAssignment = "RCS1127";
        [Obsolete("", error: true)]
        public const string ReplaceReturnWithYieldReturn = "RCS1131";
        [Obsolete("", error: true)]
        public const string AddDocumentationComment = "RCS1137";
        [Obsolete("", error: true)]
        public const string MarkContainingClassAsAbstract = "RCS1144";
        [Obsolete("", error: true)]
        public const string RemoveInapplicableModifier = "RCS1147";
        [Obsolete("", error: true)]
        public const string RemoveUnreachableCode = "RCS1148";
        [Obsolete("", error: true)]
        public const string RemoveImplementationFromAbstractMember = "RCS1149";
        [Obsolete("", error: true)]
        public const string CallStringConcatInsteadOfStringJoin = "RCS1150";
        [Obsolete("", error: true)]
        public const string MemberTypeMustMatchOverriddenMemberType = "RCS1152";
        [Obsolete("", error: true)]
        public const string AddEmptyLineAfterClosingBrace = "RCS1153";
        [Obsolete("", error: true)]
        public const string OverridingMemberCannotChangeAccessModifiers = "RCS1167";
        [Obsolete("", error: true)]
        public const string CallDebugFailInsteadOfDebugAssert = "RCS1178";
        [Obsolete("", error: true)]
        public const string FormatInitializerWithSingleExpressionOnSingleLine = "RCS1183";
        [Obsolete("", error: true)]
        public const string FormatConditionalExpression = "RCS1184";
        [Obsolete("", error: true)]
        public const string FormatSingleLineBlock = "RCS1185";
        [Obsolete("", error: true)]
        public const string CallSkipAndAnyInsteadOfCount = "RCS1219";
        [Obsolete("", error: true)]
        public const string SimplifyConditionalExpression2 = "RCS1245";
    }
}